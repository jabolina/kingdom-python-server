name: Tests

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    types: [opened, synchronize, edited]
    branches:
      - master
      - dev

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        env:
          POSTGRES_DB: apolo
        image: postgres:11.5
        ports: [ "5432:5432" ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Linting checks
        # removed < mypy --config-file mypy.ini . > for now
        run: |
          flake8 .
      - name: Prepare test postgres database
        env:
          PYTHONPATH: .
        run: alembic -x data=true upgrade head
      - name: Test authentication
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          EMAILS_SENDER_EMAIL: ${{ secrets.EMAILS_SENDER_EMAIL }}
          EMAILS_FROM_NAME: ${{ secrets.EMAILS_FROM_NAME }}
        run: |
          pytest tests/auth/unit --color=yes --showlocals -v
          pytest tests/auth/integration --color=yes --showlocals -v -s
          pytest tests/auth/e2e --color=yes --showlocals -v
      - name: Test management
        env:
          DIGESTO_TOKEN: ${{ secrets.DIGESTO_TOKEN_HML }}
          DIGESTO_URL: ${{ secrets.DIGESTO_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          pytest tests/management/unit --color=yes --showlocals -v
          pytest tests/management/integration --color=yes --showlocals -v
          pytest tests/management/e2e/test_mutations.py --color=yes --showlocals -v
          pytest tests/management/e2e/test_lambdas.py --color=yes --showlocals -v
          pytest tests/management/e2e/test_queries.py --color=yes --showlocals -v
